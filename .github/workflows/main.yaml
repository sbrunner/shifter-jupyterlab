name: Continuous integration

on:
  push:
    branches:
      - master
      - '[0-9]+.[0-9]+'
    tags:
      - '*'
  pull_request:

permissions:
  contents: write

  id-token: write
env:
  HAS_SECRETS: ${{ secrets.HAS_SECRETS }}
  PYTHON_KEYRING_BACKEND: keyring.backends.null.Keyring

jobs:
  main:
    name: Continuous integration
    runs-on: ubuntu-24.04
    timeout-minutes: 20
    if: "!startsWith(github.event.head_commit.message, '[skip ci] ')"

    steps:
      - run: docker system prune --all --force
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          submodules: true

      - uses: actions/setup-python@v6
        with:
          python-version: '3.12'
      - run: python3 -m pip install --requirement=ci/requirements.txt

      - name: Print environment information
        run: c2cciutils-env

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: "pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}\npre-commit-"
      - run: pre-commit run --all-files --color=always
      - run: git diff --exit-code --patch > /tmp/pre-commit.patch; git diff --color; git reset --hard || true
        if: failure()
      - uses: actions/upload-artifact@v5
        with:
          name: Apply pre-commit fix.patch
          path: /tmp/pre-commit.patch
          retention-days: 1
        if: failure()

      - run: python3 -m pip install --requirement=requirements.txt
      - run: poetry --version
      - run: poetry export --without-hashes --output=requirements-poetry.txt
      - run: python3 -m pip install --no-deps --requirement=requirements-poetry.txt

      - run: scripts/create-pages > index.html

      - run: mkdir gh-pages
      - run: mv *.html gh-pages/

      - uses: actions/upload-artifact@v5
        with:
          name: gh-pages
          path: gh-pages
        if: startsWith(github.ref, 'refs/heads/') && ! contains(github.ref_name, '/') && env.HAS_SECRETS == 'HAS_SECRETS'

  gh-pages:
    name: Github Pages
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    if: startsWith(github.ref, 'refs/heads/') && ! contains(github.ref_name, '/')
    concurrency: gh-pages
    needs:
      - main

    steps:
      - run: docker system prune --all --force
      - uses: actions/checkout@v5
        with:
          ref: gh-pages
          fetch-depth: 0
        if: env.HAS_SECRETS == 'HAS_SECRETS'

      - uses: actions/download-artifact@v6
        with:
          name: gh-pages
          path: ${{ github.ref_name }}
        if: env.HAS_SECRETS == 'HAS_SECRETS'

      - name: Rewrite root commit and force push
        run: |
          git config --global user.name "Continuous integration"
          git config --global user.email "ci@shifters-ch.org"
          git add ${{ github.ref_name }}
          git commit --message="Add ${{ github.ref_name }} on GitHub pages"
          git push
        if: env.HAS_SECRETS == 'HAS_SECRETS'
