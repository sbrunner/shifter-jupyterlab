#!/usr/bin/env python3


import glob
import os
import subprocess

import yaml

if __name__ == "__main__":
    imported_html_filed = set(glob.glob("*.html"))
    print("<html>")
    print("<head>")
    print("<title>Index of charts</title>")
    print(
        '<link href="https://cdn.jsdelivr.net/npm/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" crossorigin="anonymous">'
    )
    print(
        """<style>
body { padding: 1rem; }
</style>"""
    )
    print("</head>")
    print("<body>")
    first = True
    for file in glob.glob("*.ipynb"):
        if file in ("swiss-energy.ipynb",):
            continue
        subprocess.run(["jupyter", "nbconvert", "--to=notebook", "--execute", file], check=True)
        new_html_files = set(glob.glob("*.html")) - imported_html_filed
        if new_html_files:
            if not first:
                print("<hr>")
            first = False

            imported_html_filed.update(new_html_files)

            metadata_filename = f"{os.path.splitext(file)[0]}.yaml"
            if not os.path.exists(metadata_filename):
                raise RuntimeError(f"Missing '{metadata_filename}' file to provide additional information.")
            with open(metadata_filename, encoding="utf-8") as metadata_file:
                metadata = yaml.load(metadata_file.read(), Loader=yaml.SafeLoader)

            for lang, title in metadata["title"].items():
                print(f"<h2 lang={lang}>{title}</h2>")
            for lang, description in metadata.get("description", {}).items():
                print(f"<p lang={lang}>{description}</p>")
            figures = metadata["figures"]
            print('<ul class="list-group">')
            for html_file in new_html_files:
                html_file_no_extension = os.path.splitext(html_file)[0]
                print(
                    f'<li class="list-group-item"><a href="{html_file}">{figures.get(html_file_no_extension, html_file_no_extension)}</a></li>'
                )
            print("</ul>")
            print("<h4>Sources</h4>")
            for source in metadata["sources"]:
                source_name = source["name"]
                source_url = source["url"]
                print(f'<p><a href="{source_url}">{source_name}</a>.</p>')
            print(
                f'<p>Generated by Jupyter notebook <code>{file}</code> from <a href="https://github.com/'
                f'{os.environ.get("GITHUB_REPOSITORY", "")}">{os.environ.get("GITHUB_REPOSITORY", "")}</a>.</p>'
            )

    print("</body>")
    print("</html>")

    for file in glob.glob("**/*.ipynb"):
        subprocess.run(["jupyter", "nbconvert", "--to=notebook", "--execute", file], check=True)
